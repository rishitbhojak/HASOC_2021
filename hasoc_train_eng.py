# -*- coding: utf-8 -*-
"""hasoc.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fsvkdlTo4oxdg8SL4TWqs6vPY3s2lsOn
"""

from nltk.util import pr
import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
import re
import nltk
nltk.download('stopwords')
stemmer = nltk.SnowballStemmer("english")
from nltk.corpus import stopwords
import string
stopword=set(stopwords.words('english'))
data = pd.read_csv("en_Hasoc2021_train.csv")

data.head(5)

print(data["text"])

data["labels"] = data["task_1"].map({"HOF": "Hate Speech and Offensive Language", "NOT": "No Hate and Offensive"})

data.head()

data = data[["text", "labels"]]
print(data.head())

def clean(tweetText):
    tweetText = str(tweetText).lower()
    tweetText = re.sub('\[.*?\]', '', tweetText)
    tweetText = re.sub('https?://\S+|www\.\S+', '', tweetText)
    tweetText = re.sub('<.*?>+', '', tweetText)
    tweetText = re.sub('[%s]' % re.escape(string.punctuation), '', tweetText)
    tweetText = re.sub('\n', '', tweetText)
    tweetText = re.sub('\w*\d\w*', '', tweetText)
    tweetText = [word for word in tweetText.split(' ') if word not in stopword]
    tweetText=" ".join(tweetText)
    tweetText = [stemmer.stem(word) for word in tweetText.split(' ')]
    tweetText=" ".join(tweetText)
    return tweetText
data["text"] = data["text"].apply(clean)

x = np.array(data["text"])
y = np.array(data["labels"])

cv = CountVectorizer()
X = cv.fit_transform(x) # Fit the Data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=42)

clf = DecisionTreeClassifier()
clf.fit(X_train,y_train)

sample = "YOU BITCH ASS BULLSHIT , GO SUCK YOUR DICK"
data = cv.transform([sample]).toarray()
print(clf.predict(data))

clf = DecisionTreeClassifier()
clf.fit(X_train,y_train)
clf.score(X_test,y_test)

def hate_speech_detection():
    import streamlit as st
    st.title("Hate Speech Detection")
    user = st.text_area("Enter any Tweet: ")
    if len(user) < 1:
        st.write("  ")
    else:
        sample = user
        data = cv.transform([sample]).toarray()
        a = clf.predict(data)
        st.title(a)
hate_speech_detection()
streamlit run hasoc.py

